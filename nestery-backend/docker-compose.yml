version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestery-backend
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=production
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_EXPIRATION=15m
      - JWT_REFRESH_EXPIRATION=7d
      - BOOKING_COM_API_KEY=${BOOKING_COM_API_KEY}
      - BOOKING_COM_API_SECRET=${BOOKING_COM_API_SECRET}
      - OYO_API_KEY=${OYO_API_KEY}
      - OYO_API_SECRET=${OYO_API_SECRET}
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
    volumes:
      - ./logs:/app/logs
    networks:
      - nestery-network

  postgres:
    image: postgres:14-alpine
    container_name: nestery-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - nestery-network

  redis:
    image: redis:alpine
    container_name: nestery-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - nestery-network

  nginx:
    image: nginx:alpine
    container_name: nestery-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - nestery-network

networks:
  nestery-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
